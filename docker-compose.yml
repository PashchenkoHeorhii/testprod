version: '3.8'
services:
  postgresdb:
    image: postgres:13.3
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./db-data:/var/lib/postgresql/data
      - ./docker-initdb:/docker-entrypoint-initdb.d
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}']
      timeout: 45s
      interval: 10s
      retries: 10
    networks:
      - db_network

  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - ${PORT}:${PORT}
    depends_on:
      postgresdb:
        condition: service_healthy
    env_file:
      - .env
    networks:
      - db_network

  mongo:
    image: mongo:8.0.0
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DATABASE_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - mongo-db:/data/db
    ports:
      - ${DATABASE_PORT}:27017

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: ${DATABASE_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${DATABASE_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${DATABASE_USERNAME}:${DATABASE_PASSWORD}@mongo:${DATABASE_PORT}/


networks:
  db_network:
    driver: bridge

volumes:
  mongo-db:
